""" Service method for email service of email_gateway app. """

def process_message(msg):
    """ Method used in derived Email classes. Used to modify message method in 
    EmailMultiAlternatives and Test Backend. Calls django's message method and 
    then cleans up the header context so that the CC'd addresses do not appear 
    in the TO list (and the TO list emails remain unique).
    
    Note: Test and Live email messages are different structures. The test 
    EmailBackend creates extra_headers as a dict, while our live email backend
    creates _headers as a list of tuple objects. This handles both.
    """
    to_index = None
    dsp_to = None
    # Tests use extra_headers key, Live uses _headers key, only one exists.
    try:
        header_dict = msg._headers
    except AttributeError:
        header_dict = msg.extra_headers             
    for index, item in enumerate(header_dict):
        if item[0] == 'dsp_to':
            dsp_to = (index, item[1])
            header_dict[index] = 'REMOVE_DSP_TO'
        elif item[0] == 'To':
            to_index = index
        elif item == 'dsp_to':
            # This is generated by a test.
            dsp_to = msg.extra_headers[item]
    if dsp_to:
        if to_index: # Update header object of tuples.
            header_dict[to_index] = ('To', dsp_to[1])
            header_dict.remove('REMOVE_DSP_TO')
        else:
            # Update dict in msg generated by test.
            header_dict['To'] = msg.extra_headers.pop('dsp_to')
    return msg
